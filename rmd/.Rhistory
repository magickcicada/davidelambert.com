) %>%
addResetMapButton() %>%
addFullscreenControl() %>%
suspendScroll(sleepNote = F, sleepOpacity = 1) %>%
addControl(
"<img src = 'https://davidelambert.com/img/alameda_income_legend_2.svg' width = '128' height = '128'>",
position = "topright",
className = "legend-bivar"
)
system("cmd.exe /C dir")
system("cmd.exe /C dir /AH")
knitr::opts_chunk$set(echo = TRUE, collapse = TRUE, fig.path = "assets/img/")
library(tidycensus)
library(dplyr)
library(magrittr)
library(sf)
library(ggplot2)
library(leaflet)
library(leaflet.extras)
library(htmlwidgets)
library(htmltools)
load("alameda_income.Rdata")
# from Census API pull described but not evaluated below
hhinc_metro <- 92714
# get values for lower & upper "Pew breaks"
hhinc_lower <- ((2/3) * hhinc_metro)
hhinc_upper <- (2 * hhinc_metro)
# binned palette using Pew breaks & full-color univariate scale hex values
pal_hhinc <- colorBin(
palette = c("#EDEDED", "#FF94C0", "#FF2C54"),
domain = alameda$hhinc,
bins = c(0, hhinc_lower, hhinc_upper, max(alameda$hhinc, na.rm = T))
)
# also from Census API not evaluated
pearn_metro <- 46477
# personal earnings Pew breaks
pearn_lower <- ((2/3) * pearn_metro)
pearn_upper <- (2 * pearn_metro)
# palette using same colors as hh income
pal_pearn <- colorBin(
palette = c("#EDEDED", "#FF94C0", "#FF2C54"),
domain = alameda$pearn,
bins = c(0, pearn_lower, pearn_upper,  max(alameda$pearn, na.rm = T))
)
# gini scale, using breaks at terciles (1/3-quantiles)
pal_gini <- colorQuantile(
palette = c("#EDEDED", "#94C6E7", "#4CB1DF"),
domain = alameda$gini,
probs = seq(0, 1, length.out = 4)
)
#create labels
nogeog <- st_drop_geometry(alameda)
labs <- lapply(seq(nrow(nogeog)), function(i) {
paste0(
"Median Household Income: $",
prettyNum(nogeog[i, "hhinc"], big.mark = ","), "<br>",
"Median Presonal Earnings: $",
prettyNum(nogeog[i, "pearn"], big.mark = ","), "<br>",
"Gini Coefficient: ", round(nogeog[i, "gini"], 3)
)
})
# plot the sucker
alameda %>%
leaflet(
width = "100%",
options = leafletOptions(zoomSnap = 0.25, zoomDelta = 0.5)
) %>%
addProviderTiles("Stamen.TonerLite") %>%
# HH Income Layer
addPolygons(
group = "Household Income",
fillColor = ~pal_hhinc(hhinc),
fillOpacity = 0.5,
stroke = FALSE,
smoothFactor = 0
) %>%
# Personal Earnings Layer
addPolygons(
group = "Personal Earnings",
fillColor = ~pal_pearn(pearn),
fillOpacity = 0.5,
stroke = FALSE,
smoothFactor = 0
) %>%
# Gini Layer
addPolygons(
group = "Gini Coefficient",
fillColor = ~pal_gini(gini),
fillOpacity = 0.5,
stroke = FALSE,
smoothFactor = 0
) %>%
# income measure switching
addLayersControl(
baseGroups = c("Household Income", "Personal Earnings"),
options = layersControlOptions(collapsed = FALSE),
position = "topright"
) %>%
# forces income measure layer to bottom on switch
htmlwidgets::onRender("
function(el, x) {
this.on('baselayerchange', function(e) {
e.layer.bringToBack();
})
}
") %>%
addPolygons(
label = lapply(labs, htmltools::HTML),
labelOptions = labelOptions(textsize = "12px"),
fillColor = NA,
fillOpacity = 0,
color = "black",
weight = 1,
opacity = 1,
highlightOptions = highlightOptions(weight = 2)
) %>%
addResetMapButton() %>%
addFullscreenControl() %>%
suspendScroll(sleepNote = F, sleepOpacity = 1) %>%
addControl(
"<img src = 'https://davidelambert.com/img/alameda_income_legend_2.svg' width = '128' height = '128'>",
position = "topright",
className = "legend-bivar"
)
library(kableExtra)
tabvars <- c("hhinc", "pearn", "gini")
mins <- lapply(st_drop_geometry(alameda[, tabvars]),
function(x) min(x, na.rm = TRUE))
maxes <- lapply(st_drop_geometry(alameda[, tabvars]),
function(x) max(x, na.rm = TRUE))
means <- lapply(st_drop_geometry(alameda[, tabvars]),
function(x) mean(x, na.rm = TRUE))
tab <- bind_rows(mins, maxes, means) %>%
as.data.frame() %>%
mutate(
hhinc = paste0("$", prettyNum(round(hhinc, 0), big.mark = ",")),
pearn = paste0("$", prettyNum(round(pearn, 0), big.mark = ",")),
gini = round(gini, 3)
) %>%
`rownames<-`(c("Minimum", "Maximum", "Mean")) %>%
`colnames<-`(c("Median Household Income",
"Median Personal Earnings",
"Gini Coefficient"))
knitr::kable(tab, align = rep("l", 3)) %>%
column_spec(1, width = "25%", bold = TRUE)
library(tidycensus)
library(dplyr)
library(magrittr)
library(sf)
library(ggplot2)
library(leaflet)
library(leaflet.extras)
library(htmlwidgets)
library(htmltools)
# Named vector of ACS tables to get from Census API
varlist <- c("hhinc" = "B19013_001",
"pearn" = "B20002_001",
"gini" = "B19083_001")
# tract-level summary data from Census API
alameda <- get_acs(
geography = "tract",
state = "CA",
county = "Alameda",
variables = varlist,
survey = "acs5",
year = 2017,
output = "wide",
geometry = TRUE
)
# drop margins of error
alameda <- alameda[, c(1, 2, seq(3, 9, by = 2))]
# lowercasse names with no "E" suffix
colnames(alameda) <- c("GEOID", "name", names(varlist), "geometry")
# re-project to play nice with leaflet
alameda <- st_transform(alameda, 4326, type = "datum")
# probably a good idea to save the object in case the API goes down.
save(alameda, file = "alameda_income.Rdata")
# get median hh income for SF-Oakland-Hayward MSA as baseline for breaks
# returns 92714 - retain in case API is down
hhinc_metro <- get_acs(
geography = "metropolitan statistical area/micropolitan statistical area",
variables = c("hhinc" = "B19013_001"),
survey = "acs5",
year = 2017
) %>%
filter(GEOID == "41860") %>%
select(estimate) %>%
pull()
# get values for lower & upper "Pew breaks"
hhinc_lower <- ((2/3) * hhinc_metro)
hhinc_upper <- (2 * hhinc_metro)
# binned palette using Pew breaks & full-color univariate scale hex values
pal_hhinc <- colorBin(
palette = c("#EDEDED", "#FF94C0", "#FF2C54"),
domain = alameda$hhinc,
bins = c(0, hhinc_lower, hhinc_upper, max(alameda$hhinc, na.rm = T))
)
# get median personal earnings for metro
# returns 46477
pearn_metro <- get_acs(
geography = "metropolitan statistical area/micropolitan statistical area",
variables = c("pearn" = "B20002_001"),
survey = "acs5",
year = 2017
) %>%
filter(GEOID == "41860") %>%
select(estimate) %>%
pull()
# personal earnings Pew breaks
pearn_lower <- ((2/3) * pearn_metro)
pearn_upper <- (2 * pearn_metro)
# palette using same colors as hh income
pal_pearn <- colorBin(
palette = c("#EDEDED", "#FF94C0", "#FF2C54"),
domain = alameda$pearn,
bins = c(0, pearn_lower, pearn_upper,  max(alameda$pearn, na.rm = T))
)
# gini scale, using breaks at terciles (1/3-quantiles)
pal_gini <- colorQuantile(
palette = c("#EDEDED", "#94C6E7", "#4CB1DF"),
domain = alameda$gini,
probs = seq(0, 1, length.out = 4)
)
m <- alameda %>%
leaflet(
width = "100%",
options = leafletOptions(zoomSnap = 0.25, zoomDelta = 0.5)
) %>%
addProviderTiles("Stamen.TonerLite") %>%
# HH Income Layer
addPolygons(
group = "Household Income",
fillColor = ~pal_hhinc(hhinc),
fillOpacity = 0.5,
stroke = FALSE,
smoothFactor = 0
) %>%
# Personal Earnings Layer
addPolygons(
group = "Personal Earnings",
fillColor = ~pal_pearn(pearn),
fillOpacity = 0.5,
stroke = FALSE,
smoothFactor = 0
) %>%
# Gini Layer
addPolygons(
group = "Gini Coefficient",
fillColor = ~pal_gini(gini),
fillOpacity = 0.5,
stroke = FALSE,
smoothFactor = 0
) %>%
# income measure switching
addLayersControl(
baseGroups = c("Household Income", "Personal Earnings"),
options = layersControlOptions(collapsed = FALSE),
position = "topright"
) %>%
# forces income measure layer to bottom on switch
htmlwidgets::onRender("
function(el, x) {
this.on('baselayerchange', function(e) {
e.layer.bringToBack();
})
}
")
m
# data frame with no geographic data
nogeog <- st_drop_geometry(alameda)
# list of HTML for each observation (census tract)
labs <- lapply(seq(nrow(nogeog)), function(i) {
paste0(
"Median Household Income: $",
prettyNum(nogeog[i, "hhinc"], big.mark = ","), "<br>",
"Median Presonal Earnings: $",
prettyNum(nogeog[i, "pearn"], big.mark = ","), "<br>",
"Gini Coefficient: ", round(nogeog[i, "gini"], 3)
)
})
m %<>%
addPolygons(
label = lapply(labs, htmltools::HTML),
labelOptions = labelOptions(textsize = "12px"),
fillColor = NA,
fillOpacity = 0,
color = "black",
weight = 1,
opacity = 1,
highlightOptions = highlightOptions(weight = 2)
) %>%
addResetMapButton() %>%
addFullscreenControl() %>%
suspendScroll(sleepNote = F, sleepOpacity = 1)
m
# data.frame of color values from 50% opacity region in template
legend_scale <- data.frame(
income = c(rep(1, 3), rep(2, 3), rep(3, 3)),
inequality = c(rep(seq(1, 3, 1), 3)),
color = c("#F1F1F1", "#C3DEEE", "#A1D3EA",
"#F7DBE7", "#CAC8E3", "#A6BDDF",
"#F7C1CB", "#CAAEC8", "#A6A3C4")
)
# legend
legend <- ggplot() +
geom_tile(
data = legend_scale,
aes(x = income, y = inequality, fill = color)
) +
scale_fill_identity() +
labs(x = "Income →",
y = "Inequality →") +
theme(
axis.title = element_text(size = 20),
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.background = element_blank(),
plot.margin = margin(10, 10, 10, 10),
plot.background = element_rect(fill = "transparent", color = NA)
)
# save SVG legend
ggsave("alameda_income_legend.svg", plot = legend,
width = 3, height = 3, bg = "transparent")
install.packages("svglite")
# save SVG legend
ggsave("alameda_income_legend.svg", plot = legend,
width = 3, height = 3, bg = "transparent")
.legend-bivar {
m %<>%
addControl(
"<img src = 'https://davidelambert.com/img/alameda_income_legend.svg' width = '128' height = '128'>",
position = "topright",
className = "legend-bivar"
)
m
knitr::opts_chunk$set(echo = TRUE, collapse = TRUE, fig.path = "assets/img/")
library(tidycensus)
library(dplyr)
library(magrittr)
library(sf)
library(ggplot2)
library(leaflet)
library(leaflet.extras)
library(htmlwidgets)
library(htmltools)
load("alameda_income.Rdata")
# from Census API pull described but not evaluated below
hhinc_metro <- 92714
# get values for lower & upper "Pew breaks"
hhinc_lower <- ((2/3) * hhinc_metro)
hhinc_upper <- (2 * hhinc_metro)
# binned palette using Pew breaks & full-color univariate scale hex values
pal_hhinc <- colorBin(
palette = c("#EDEDED", "#FF94C0", "#FF2C54"),
domain = alameda$hhinc,
bins = c(0, hhinc_lower, hhinc_upper, max(alameda$hhinc, na.rm = T))
)
# also from Census API not evaluated
pearn_metro <- 46477
# personal earnings Pew breaks
pearn_lower <- ((2/3) * pearn_metro)
pearn_upper <- (2 * pearn_metro)
# palette using same colors as hh income
pal_pearn <- colorBin(
palette = c("#EDEDED", "#FF94C0", "#FF2C54"),
domain = alameda$pearn,
bins = c(0, pearn_lower, pearn_upper,  max(alameda$pearn, na.rm = T))
)
# gini scale, using breaks at terciles (1/3-quantiles)
pal_gini <- colorQuantile(
palette = c("#EDEDED", "#94C6E7", "#4CB1DF"),
domain = alameda$gini,
probs = seq(0, 1, length.out = 4)
)
#create labels
nogeog <- st_drop_geometry(alameda)
labs <- lapply(seq(nrow(nogeog)), function(i) {
paste0(
"Median Household Income: $",
prettyNum(nogeog[i, "hhinc"], big.mark = ","), "<br>",
"Median Presonal Earnings: $",
prettyNum(nogeog[i, "pearn"], big.mark = ","), "<br>",
"Gini Coefficient: ", round(nogeog[i, "gini"], 3)
)
})
# plot the sucker
alameda %>%
leaflet(
width = "100%",
options = leafletOptions(zoomSnap = 0.25, zoomDelta = 0.5)
) %>%
addProviderTiles("Stamen.TonerLite") %>%
# HH Income Layer
addPolygons(
group = "Household Income",
fillColor = ~pal_hhinc(hhinc),
fillOpacity = 0.5,
stroke = FALSE,
smoothFactor = 0
) %>%
# Personal Earnings Layer
addPolygons(
group = "Personal Earnings",
fillColor = ~pal_pearn(pearn),
fillOpacity = 0.5,
stroke = FALSE,
smoothFactor = 0
) %>%
# Gini Layer
addPolygons(
group = "Gini Coefficient",
fillColor = ~pal_gini(gini),
fillOpacity = 0.5,
stroke = FALSE,
smoothFactor = 0
) %>%
# income measure switching
addLayersControl(
baseGroups = c("Household Income", "Personal Earnings"),
options = layersControlOptions(collapsed = FALSE),
position = "topright"
) %>%
# forces income measure layer to bottom on switch
htmlwidgets::onRender("
function(el, x) {
this.on('baselayerchange', function(e) {
e.layer.bringToBack();
})
}
") %>%
addPolygons(
label = lapply(labs, htmltools::HTML),
labelOptions = labelOptions(textsize = "12px"),
fillColor = NA,
fillOpacity = 0,
color = "black",
weight = 1,
opacity = 1,
highlightOptions = highlightOptions(weight = 2)
) %>%
addResetMapButton() %>%
addFullscreenControl() %>%
suspendScroll(sleepNote = F, sleepOpacity = 1) %>%
addControl(
"<img src = 'https://davidelambert.com/img/alameda_income_legend_2.svg' width = '128' height = '128'>",
position = "topright",
className = "legend-bivar"
)
library(kableExtra)
tabvars <- c("hhinc", "pearn", "gini")
mins <- lapply(st_drop_geometry(alameda[, tabvars]),
function(x) min(x, na.rm = TRUE))
maxes <- lapply(st_drop_geometry(alameda[, tabvars]),
function(x) max(x, na.rm = TRUE))
means <- lapply(st_drop_geometry(alameda[, tabvars]),
function(x) mean(x, na.rm = TRUE))
tab <- bind_rows(mins, maxes, means) %>%
as.data.frame() %>%
mutate(
hhinc = paste0("$", prettyNum(round(hhinc, 0), big.mark = ",")),
pearn = paste0("$", prettyNum(round(pearn, 0), big.mark = ",")),
gini = round(gini, 3)
) %>%
`rownames<-`(c("Minimum", "Maximum", "Mean")) %>%
`colnames<-`(c("Median Household Income",
"Median Personal Earnings",
"Gini Coefficient"))
knitr::kable(tab, align = rep("l", 3)) %>%
column_spec(1, width = "25%", bold = TRUE)
m <- alameda %>%
leaflet(
width = "100%",
options = leafletOptions(zoomSnap = 0.25, zoomDelta = 0.5)
) %>%
addProviderTiles("Stamen.TonerLite") %>%
# HH Income Layer
addPolygons(
group = "Household Income",
fillColor = ~pal_hhinc(hhinc),
fillOpacity = 0.5,
stroke = FALSE,
smoothFactor = 0
) %>%
# Personal Earnings Layer
addPolygons(
group = "Personal Earnings",
fillColor = ~pal_pearn(pearn),
fillOpacity = 0.5,
stroke = FALSE,
smoothFactor = 0
) %>%
# Gini Layer
addPolygons(
group = "Gini Coefficient",
fillColor = ~pal_gini(gini),
fillOpacity = 0.5,
stroke = FALSE,
smoothFactor = 0
) %>%
# income measure switching
addLayersControl(
baseGroups = c("Household Income", "Personal Earnings"),
options = layersControlOptions(collapsed = FALSE),
position = "topright"
) %>%
# forces income measure layer to bottom on switch
htmlwidgets::onRender("
function(el, x) {
this.on('baselayerchange', function(e) {
e.layer.bringToBack();
