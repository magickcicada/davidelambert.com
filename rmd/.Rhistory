theme(
axis.title = element_blank(),
axis.text.y = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "bottom"
)
ggplot() + df + d + bf + b + {if (length(outliers) > 0) o} +
sc + sl + t + coord_flip()
norm_x <- seq(-3.1, 3.1, length.out = 512) * sd(X) + mean(X)
norm_y <- dnorm(norm_x, mean(X), sd(X))
ndf <- data.frame(
x = norm_x,
density = norm_y
)
n <- geom_path(
data = ndf,
aes(x = density, y = x,
color = "Comparison Normal Distribution",
linetype = "Comparison Normal Distribution"),
size = 1.1
)
sc <- scale_color_manual(
name = "",
values = c("X" = "#1b4b6c",
"Comparison Normal Distribution" = "#00BA38")
)
sl <- scale_linetype_manual(
name = "",
values = c("X" = "solid",
"Comparison Normal Distribution" = "twodash")
)
ggplot() + df + d + bf + b + {if (length(outliers) > 0) o} +
n + sc + sl + t + coord_flip()
n <- geom_path(
data = ndf,
aes(x = density, y = x,
color = "Comparison Normal Distribution",
linetype = "Comparison Normal Distribution"),
size = 1.1
)
sc <- scale_color_manual(
name = "",
values = c("X" = "#1b4b6c",
"Comparison Normal Distribution" = "#ff6f00")
)
sl <- scale_linetype_manual(
name = "",
values = c("X" = "solid",
"Comparison Normal Distribution" = "twodash")
)
ggplot() + df + d + bf + b + {if (length(outliers) > 0) o} +
n + sc + sl + t + coord_flip()
# log transform X
logX <- log(X)
# density data frame
dens <- density(logX)
ddf <- data.frame(
logX = dens$x,
density = dens$y
)
# density line plot
d <- geom_path(
data = ddf,
aes(x = density, y = logX, color = "log(X)", linetype = "log(X)"),
size = 1.1
)
# density fill
df <- geom_polygon(
data = ddf,
aes(x = density, y = logX),
fill = "#1b4b6c",
color = NA,
alpha = 0.2
)
# define fence coefficient, using the standard 1.5
fence_coef <- 1.5
# box plot
b <- stat_boxplot(
data = NULL,
aes(y = logX),
coef = fence_coef,
fill = NA,
color = "#1b4b6c",
outlier.shape = NA,
width = .2 * max(ddf$density),
position = position_nudge(x = -0.15 * max(ddf$density))
)
# box plot fill
bf <- annotate(
geom = "rect",
xmin = -.05 * max(ddf$density),
xmax = -.25 * max(ddf$density),
ymin = quantile(logX, 0.25),
ymax = quantile(logX, 0.75),
color = NA,
fill = "#1b4b6c",
alpha = 0.2,
)
# define outliers
iqr <- IQR(logX)
outliers <- logX[logX < (quantile(logX, 0.25) - fence_coef * iqr) |
logX > (quantile(logX, 0.75) + fence_coef * iqr)]
# outliers plot
o <-  geom_point(
aes(y = outliers, x = -0.15 * max(ddf$density)),
color = "#1b4b6c",
alpha = 0.2,
position = position_jitter(width = .075 * max(ddf$density))
)
# comparison normal distribution
norm_x <- seq(-3.1, 3.1, length.out = 512) * sd(logX) + mean(logX)
norm_y <- dnorm(norm_x, mean(logX), sd(logX))
ndf <- data.frame(
logX = norm_x,
density = norm_y
)
# comparison normal density plot
n <- geom_path(
data = ndf,
aes(x = density, y = logX,
color = "Comparison Normal Distribution",
linetype = "Comparison Normal Distribution"),
size = 1.1
)
# color scale
sc <- scale_color_manual(
name = "",
values = c("log(X)" = "#1b4b6c",
"Comparison Normal Distribution" = "#00BA38")
)
# linetype scale
sl <- scale_linetype_manual(
name = "",
values = c("log(X)" = "solid",
"Comparison Normal Distribution" = "twodash")
)
# theme
t <- theme_minimal() +
theme(
axis.title = element_blank(),
axis.text.y = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "bottom"
)
# PLOT!
ggplot() + df + d + bf + b + {if (length(outliers) > 0) o} +
n + sc + sl + t + coord_flip()
# log transform X
logX <- log(X)
# density data frame
dens <- density(logX)
ddf <- data.frame(
logX = dens$x,
density = dens$y
)
# density line plot
d <- geom_path(
data = ddf,
aes(x = density, y = logX, color = "log(X)", linetype = "log(X)"),
size = 1.1
)
# density fill
df <- geom_polygon(
data = ddf,
aes(x = density, y = logX),
fill = "#1b4b6c",
color = NA,
alpha = 0.2
)
# define fence coefficient, using the standard 1.5
fence_coef <- 1.5
# box plot
b <- stat_boxplot(
data = NULL,
aes(y = logX),
coef = fence_coef,
fill = NA,
color = "#1b4b6c",
outlier.shape = NA,
width = .2 * max(ddf$density),
position = position_nudge(x = -0.15 * max(ddf$density))
)
# box plot fill
bf <- annotate(
geom = "rect",
xmin = -.05 * max(ddf$density),
xmax = -.25 * max(ddf$density),
ymin = quantile(logX, 0.25),
ymax = quantile(logX, 0.75),
color = NA,
fill = "#1b4b6c",
alpha = 0.2,
)
# define outliers
iqr <- IQR(logX)
outliers <- logX[logX < (quantile(logX, 0.25) - fence_coef * iqr) |
logX > (quantile(logX, 0.75) + fence_coef * iqr)]
# outliers plot
o <-  geom_point(
aes(y = outliers, x = -0.15 * max(ddf$density)),
color = "#1b4b6c",
alpha = 0.2,
position = position_jitter(width = .075 * max(ddf$density))
)
# comparison normal distribution
norm_x <- seq(-3.1, 3.1, length.out = 512) * sd(logX) + mean(logX)
norm_y <- dnorm(norm_x, mean(logX), sd(logX))
ndf <- data.frame(
logX = norm_x,
density = norm_y
)
# comparison normal density plot
n <- geom_path(
data = ndf,
aes(x = density, y = logX,
color = "Comparison Normal Distribution",
linetype = "Comparison Normal Distribution"),
size = 1.1
)
# color scale
sc <- scale_color_manual(
name = "",
values = c("log(X)" = "#1b4b6c",
"Comparison Normal Distribution" = "#ff6f00")
)
# linetype scale
sl <- scale_linetype_manual(
name = "",
values = c("log(X)" = "solid",
"Comparison Normal Distribution" = "twodash")
)
# theme
t <- theme_minimal() +
theme(
axis.title = element_blank(),
axis.text.y = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "bottom"
)
# PLOT!
ggplot() + df + d + bf + b + {if (length(outliers) > 0) o} +
n + sc + sl + t + coord_flip()
n <- geom_path(
data = ndf,
aes(x = density, y = x,
color = "Comparison Normal Distribution",
linetype = "Comparison Normal Distribution"),
size = 1.1
)
sc <- scale_color_manual(
name = "",
values = c("X" = "#1b4b6c",
"Comparison Normal Distribution" = "#ff6f00")
)
sl <- scale_linetype_manual(
name = "",
values = c("X" = "solid",
"Comparison Normal Distribution" = "twodash")
)
ggplot() + df + d + bf + b + {if (length(outliers) > 0) o} +
n + sc + sl + t + coord_flip()
knitr::opts_chunk$set(echo = TRUE, collapse = TRUE, fig.path = "assets/img/")
lognorm <- 1.36^rnorm(1000)
ggplot() + geom_density(aes(x = lognorm))
knitr::opts_chunk$set(echo = TRUE, collapse = TRUE, fig.path = "assets/img/")
library(ggplot2)
lognorm <- 1.36^rnorm(1000)
ggplot() + geom_density(aes(x = lognorm))
ggplot() + geom_boxplot(aes(y = lognorm))
X <- na.omit(lognorm)
dens <- density(X)
ddf <- data.frame(
X = dens$x,
density = dens$y
)
d <- geom_path(
data = ddf,
aes(x = density, y = X, color = "X", linetype = "X"),
color = "#1b4b6c",
size = 1.1
)
ggplot() + d
df <- geom_polygon(
data = ddf,
aes(x = density, y = X),
fill = "#1b4b6c",
color = NA,
alpha = 0.2
)
ggplot() + df + d
fence_coef <- 1.5
b <- stat_boxplot(
data = NULL,
aes(y = X),
coef = fence_coef,
fill = NA,
color = "#1b4b6c",
outlier.shape = NA,
width = .2 * max(ddf$density),
position = position_nudge(x = -0.15 * max(ddf$density))
)
ggplot() + df + d + b + coord_flip()
bf <- annotate(
geom = "rect",
xmin = -.05 * max(ddf$density),
xmax = -.25 * max(ddf$density),
ymin = quantile(X, 0.25),
ymax = quantile(X, 0.75),
color = NA,
fill = "#1b4b6c",
alpha = 0.2,
)
ggplot() + df + d + bf + b + coord_flip()
iqr <- IQR(X)
outliers <- X[X < (quantile(X, 0.25) - fence_coef * iqr) |
X > (quantile(X, 0.75) + fence_coef * iqr)]
o <-  geom_point(
aes(y = outliers, x = -0.15 * max(ddf$density)),
color = "#1b4b6c",
alpha = 0.2,
position = position_jitter(width = .075 * max(ddf$density))
)
ggplot() + df + d + bf + b + {if (length(outliers) > 0) o} + coord_flip()
ggplot() + geom_boxplot(aes(y = X)) + coord_flip()
# scales, combined by blank name argument.
sc <- scale_color_manual(name = "", values = "#1b4b6c")
sl <- scale_linetype_manual(name = "", values = "solid")
# theme elements
t <- theme_minimal() +
theme(
axis.title = element_blank(),
axis.text.y = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "bottom"
)
ggplot() + df + d + bf + b + {if (length(outliers) > 0) o} +
sc + sl + t + coord_flip()
norm_x <- seq(-3.1, 3.1, length.out = 512) * sd(X) + mean(X)
norm_y <- dnorm(norm_x, mean(X), sd(X))
ndf <- data.frame(
x = norm_x,
density = norm_y
)
n <- geom_path(
data = ndf,
aes(x = density, y = x,
color = "Comparison Normal Distribution",
linetype = "Comparison Normal Distribution"),
size = 1.1
)
sc <- scale_color_manual(
name = "",
values = c("X" = "#1b4b6c",
"Comparison Normal Distribution" = "#ff6f00")
)
sl <- scale_linetype_manual(
name = "",
values = c("X" = NULL,
"Comparison Normal Distribution" = "twodash")
)
ggplot() + df + d + bf + b + {if (length(outliers) > 0) o} +
n + sc + sl + t + coord_flip()
n <- geom_path(
data = ndf,
aes(x = density, y = x,
color = "Comparison Normal Distribution",
linetype = "Comparison Normal Distribution"),
size = 1.1
)
sc <- scale_color_manual(
name = "",
values = c("X" = "#1b4b6c",
"Comparison Normal Distribution" = "#ff6f00")
)
sl <- scale_linetype_manual(
name = "",
values = c("X" = "",
"Comparison Normal Distribution" = "twodash")
)
ggplot() + df + d + bf + b + {if (length(outliers) > 0) o} +
n + sc + sl + t + coord_flip()
n <- geom_path(
data = ndf,
aes(x = density, y = x,
color = "Comparison Normal Distribution",
linetype = "Comparison Normal Distribution"),
size = 1.1
)
sc <- scale_color_manual(
name = "",
values = c("X" = "#1b4b6c",
"Comparison Normal Distribution" = "#ff6f00")
)
sl <- scale_linetype_manual(
name = "",
values = c("X" = "solid",
"Comparison Normal Distribution" = "twodash")
)
ggplot() + df + d + bf + b + {if (length(outliers) > 0) o} +
n + sc + sl + t + coord_flip()
# log transform X
logX <- log(X)
# density data frame
dens <- density(logX)
ddf <- data.frame(
logX = dens$x,
density = dens$y
)
# density line plot
d <- geom_path(
data = ddf,
aes(x = density, y = logX, color = "log(X)", linetype = "log(X)"),
size = 1.1
)
# density fill
df <- geom_polygon(
data = ddf,
aes(x = density, y = logX),
fill = "#1b4b6c",
color = NA,
alpha = 0.2
)
# define fence coefficient, using the standard 1.5
fence_coef <- 1.5
# box plot
b <- stat_boxplot(
data = NULL,
aes(y = logX),
coef = fence_coef,
fill = NA,
color = "#1b4b6c",
outlier.shape = NA,
width = .2 * max(ddf$density),
position = position_nudge(x = -0.15 * max(ddf$density))
)
# box plot fill
bf <- annotate(
geom = "rect",
xmin = -.05 * max(ddf$density),
xmax = -.25 * max(ddf$density),
ymin = quantile(logX, 0.25),
ymax = quantile(logX, 0.75),
color = NA,
fill = "#1b4b6c",
alpha = 0.2,
)
# define outliers
iqr <- IQR(logX)
outliers <- logX[logX < (quantile(logX, 0.25) - fence_coef * iqr) |
logX > (quantile(logX, 0.75) + fence_coef * iqr)]
# outliers plot
o <-  geom_point(
aes(y = outliers, x = -0.15 * max(ddf$density)),
color = "#1b4b6c",
alpha = 0.2,
position = position_jitter(width = .075 * max(ddf$density))
)
# comparison normal distribution
norm_x <- seq(-3.1, 3.1, length.out = 512) * sd(logX) + mean(logX)
norm_y <- dnorm(norm_x, mean(logX), sd(logX))
ndf <- data.frame(
logX = norm_x,
density = norm_y
)
# comparison normal density plot
n <- geom_path(
data = ndf,
aes(x = density, y = logX,
color = "Comparison Normal Distribution",
linetype = "Comparison Normal Distribution"),
size = 1.1
)
# color scale
sc <- scale_color_manual(
name = "",
values = c("log(X)" = "#1b4b6c",
"Comparison Normal Distribution" = "#ff6f00")
)
# linetype scale
sl <- scale_linetype_manual(
name = "",
values = c("log(X)" = "solid",
"Comparison Normal Distribution" = "twodash")
)
# theme
t <- theme_minimal() +
theme(
axis.title = element_blank(),
axis.text.y = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "bottom"
)
# PLOT!
ggplot() + df + d + bf + b + {if (length(outliers) > 0) o} +
n + sc + sl + t + coord_flip()
knit_with_parameters('C:/Users/delamb/Dropbox/web/davidelambert.com/rmd/combined-density-box-plots.Rmd')
?rmarkdown::render()
knit_with_parameters('C:/Users/delamb/Dropbox/web/davidelambert.com/rmd/combined-density-box-plots.Rmd')
rmarkdown::render("combined-density-box-plots.Rmd", output_file = "combined-density-box-plots.html", output_dir = "/Users/delamb/Dropbox/web/davidelambert.com/docs/posts/combined-density-box-plots.html")
rmarkdown::render(input = "combined-density-box-plots.Rmd", output_format = "all" output_file = "combined-density-box-plots.html", output_dir = "/Users/delamb/Dropbox/web/davidelambert.com/docs/posts/combined-density-box-plots.html")
rmarkdown::render(input = "combined-density-box-plots.Rmd", output_format = "all", output_file = "combined-density-box-plots.html", output_dir = "/Users/delamb/Dropbox/web/davidelambert.com/docs/posts/combined-density-box-plots.html")
rmarkdown::render(input = "combined-density-box-plots.Rmd", output_format = "all", output_file = "combined-density-box-plots.html", output_dir = "/Users/delamb/Dropbox/web/davidelambert.com/docs/posts/")
